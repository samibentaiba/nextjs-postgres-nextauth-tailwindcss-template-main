generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  name     String?
  username String  @unique
  password String
}

enum Status {
  active
  inactive
  archived
}

model Image {
  id            Int            @id @default(autoincrement())
  name          String
  data          Bytes
  folder        String // e.g., 'productImages', 'blogImages'
  uploadedAt    DateTime       @default(now())
  productImages ProductImage[] // Multiple ProductImage references
  blogImages    BlogImage[] // Multiple BlogImage references
  Blog          Blog[]
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  productId Int
  imageId   Int
  image     Image    @relation(fields: [imageId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now()) // When the image was added to the product
}

model BlogImage {
  id        Int      @id @default(autoincrement())
  blogId    Int
  imageId   Int
  image     Image    @relation(fields: [imageId], references: [id])
  blog      Blog     @relation(fields: [blogId], references: [id])
  createdAt DateTime @default(now()) // When the image was added to the blog
}

model Product {
  id          Int            @id @default(autoincrement())
  name        String
  status      Status
  price       Decimal        @db.Decimal(10, 2)
  stock       Int
  availableAt DateTime
  images      ProductImage[] // One-to-many relation to ProductImage
}

model Blog {
  id          Int         @id @default(autoincrement())
  title       String
  content     String
  status      Status      @default(active)
  publishedAt DateTime    @default(now())
  imageId     Int         @unique // Primary image for the blog
  image       Image       @relation(fields: [imageId], references: [id])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  blogImages  BlogImage[] // One-to-many relation to BlogImage
}

